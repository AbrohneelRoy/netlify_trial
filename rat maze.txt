#include <bits/stdc++.h>
using namespace std;

const int N=100;
int n,maze[N][N],path[N][N];

bool solve(int i, int j) {
    // Check if the current cell is a valid cell
    if(i<0 || i>=n || j<0 || j>=n || maze[i][j]==0 || path[i][j]==1) {
        return false;
    }

    if(i==n-1 && j==n-1) {
        path[i][j]=1;
        return true;
    }
    path[i][j]=1;

    if(solve(i+1,j)) {
        return true;
    }
    if(solve(i,j+1)) {
        return true;
    }
    path[i][j]=0;
    return false;
}
int main() {
    cin >> n;
    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            cin >> maze[i][j];
            path[i][j]=0;
        }
    }

    if(solve(0,0)) {
        for(int i=0;i<n;i++) {
            for(int j=0;j<n;j++) {
                cout << path[i][j] << " ";
            }
            cout << endl;
        }
    } else {
        cout << "Solution doesn't exist" << endl;
    }

    return 0;
}